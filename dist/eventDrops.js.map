{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///eventDrops.js","webpack:///webpack/bootstrap fe5e40a429f8cbcc5d3b","webpack:///./~/d3/build/d3.js","webpack:///./src/drawer/delimiters.js","webpack:///./src/drawer/labels.js","webpack:///./src/drawer/xAxis.js","webpack:///./src/xAxis.js","webpack:///./src/config.js","webpack:///./src/drawer/index.js","webpack:///./src/zoom.js","webpack:///./~/configurable.js/configurable.js","webpack:///./src/drawer/drops.js","webpack:///./src/drawer/lineSeparator.js","webpack:///./src/filterData.js","webpack:///./src/index.js","webpack:///./src/metaballs.js","webpack:///./~/debounce/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","ascendingComparator","f","x","ascending","pair","a","b","tickIncrement","start","stop","count","step","Math","max","power","floor","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","length","translateX","translateY","y","number$1","scale","center","offset","bandwidth","round","entering","__axis","axis","orient","context","values","tickValues","ticks","apply","tickArguments","domain","format","tickFormat","identity$1","spacing","tickSizeInner","tickPadding","range","range0","range1","position","copy","selection","path","selectAll","data","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","k","top","bottom","transition","epsilon","isFinite","transform","getAttribute","parentNode","remove","left","right","tickSizeOuter","filter","each","_","arguments","slice$1","slice","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","t","Error","Dispatch","parseTypenames","typenames","types","trim","split","map","indexOf","type","set","callback","noop","concat","push","creatorInherit","document","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","index","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","node","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","Array","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","defaultView","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","target","subject","id","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","defaultTouchable","extend","definition","create","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","h","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","get$1","state","CREATED","set$1","STARTING","__transition","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","schedule$$1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","svg","ownerSVGElement","width","height","__brush","empty","extent","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","overlay","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","isArray","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","undefined","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","z","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link$1","array","validSegment","segment","compareIntersection","clipAntimeridianLine","clean","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","from","to","clipRectangle","visible","interpolate","a1","corner","comparePoint","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","startInside","cleanInside","clipRejoin","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","transformer","methods","TransformStream","fit","projection","fitBounds","clip","clipExtent","geoStream","boundsStream$1","fitExtent","fitSize","size","fitWidth","fitHeight","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","transformRotate","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","sum","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","shuffle$1","random","extendBasis","B","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","enclosesWeak","encloseBasis","encloseBasis1","r1","r2","x21","y21","r21","x3","y3","r3","a2","a3","c2","c3","d1","d3","A","place","ax","ay","da","db","dc","intersects","score","Node$1","circle","previous","packEnclose","circles","aa","sj","sk","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$5","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$2","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","Date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","week","day$$1","parseSpecifier","Q","V","utcMonday","utcDay","getUTCFullYear","getUTCMonth","monday","day","getFullYear","getMonth","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatMicroseconds","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","year","getMilliseconds","getMinutes","getSeconds","sunday","thursday","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","dow","utcSunday","utcThursday","defaultLocale$1","locale$1","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$3","calendar","year$$1","month$$1","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","ox","oy","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","lineRadial","linkSource","linkTarget","link$2","link","buffer","argv","slice$6","x$$1","y$$1","constant$10","curveHorizontal","moveTo","bezierCurveTo","curveVertical","curveRadial$1","pointRadial","p1","p2","p3","linkHorizontal","linkVertical","linkRadial","point$2","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultTouchable$1","defaultConstrain","transform$$1","translateExtent","invertX","invertY","hi","mid","ascendingBisect","bisectLeft","pairs","cross","values0","values1","descending","number","variance","valueof","mean","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","_exit","selection_exit","selection_merge","selection$$1","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","html","touch","preventDefault","constant$2","drag","mousedowned","touchable","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","sublisteners","clickDistance","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","brighter","darker","PI","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","valueOf","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","TypeError","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition$$1","transition_on","transition_remove","transition_select","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","amplitude","period","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","tauEpsilon","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","keys","entries","nest","createResult","setResult","sortValues","rollup","valuesByKey","sortKey","sortKeys","proto","EOL","EOF","QUOTE","NEWLINE","RETURN","dsv","delimiter","convert","parseRows","token","eof","eol","DELIMITER","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","weight","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","radiuses","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","percent","precisionFixed","precisionPrefix","precisionRound","temp","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","sum$1","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","extent$1","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","naturalEarth1","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","slice$3","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$4","defer","await","results","awaitAll","defaultSource$1","uniform","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinal$$1","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRom$$1","catmullRomOpen","linearClosed","_t0","px","py","natural","none$1","none$2","stack","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","scaleExtent","Gesture","wheelidled","wheel","wheelDelta","wheelDelay","constrain","k1","touch0","touch1","touchstarting","touchDelay","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","version","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceRadial","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","clientPoint","radialArea","radialLine","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","delimiters","scales","dateFormat","extremum","_filterData","_filterData2","obj","default","config","displayLabels","labels","labelsWidth","idx","boolOrReturnValue","drawBottomAxis","drawTopAxis","_xAxis","_xAxis2","drawAxis","xScale","configuration","orientation","dimensions","_d","newObj","where","axisFormat","lineHeight","minScale","maxScale","maxScaleBounds","dataHorizontalMargin","overlayDataLines","dropSize","margin","labelsRightMargin","mouseout","mouseover","zoomend","zoomStreamCallback","click","dblclick","hasDelimiter","hasTopAxis","hasBottomAxis","eventLineColor","eventColor","metaballs","zoomable","_interopRequireDefault","_metaballs","_delimiters","_drops","_drops2","_labels","_labels2","_lineSeparator","_lineSeparator2","defs","chartWidth","chartXOffset","labelsTotalWidth","labelsContainer","chartWrapper","dropsContainer","axesContainer","lineSeparator","drops","_slicedToArray","sliceIterator","arr","_arr","_n","_e","_s","_i","Symbol","iterator","done","err","_d2","_xAxis3","_debounce","_debounce2","onZoom","scalingFunction","sumDataCount","counts","dates","zoomEnd","visualOffset","_configuration$maxSca","targetFunction","item","dropLines","separators","filterData","_scale$domain","_scale$domain2","eventDrops","eventDropGraph","chart","finalConfiguration","widthWithoutMargins","getScales","_drawer2","_zoom2","tmpXScale","timeBoundsWithOffset","yScale","assign","_config2","timeBounds","_configurable2","_configurable","_config","_drawer","_zoom","filters","func","wait","immediate","later","last","timestamp","debounced","callNow","flush"],"mappings":"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","file":"eventDrops.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"eventDrops\"] = factory();\n\telse\n\t\troot[\"eventDrops\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"eventDrops\"] = factory();\n\telse\n\t\troot[\"eventDrops\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 13);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org Version 4.12.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.12.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number$1(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = get$1(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = get$1(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n    schedule$$1.state = ENDED;\n    schedule$$1.timer.stop();\n    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule$$1 = set$1(this, id);\n    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition$$1) {\n  if (transition$$1._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule$$1 = sit(this, id),\n        on = schedule$$1.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar EOL = {};\nvar EOF = {};\nvar QUOTE = 34;\nvar NEWLINE = 10;\nvar RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return next ? previous.next = next : delete previous.next, this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar radial = function(radius, x, y) {\n  var nodes,\n      strength = constant$6(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant$6(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipRejoin = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius) {\n  var cr = cos$1(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream$1));\n  fitBounds(boundsStream$1.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nfunction fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nfunction fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null, (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity$4,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n};\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon$2 && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nvar naturalEarth1 = function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice$3 = Array.prototype.slice;\n\nfunction shuffle$1(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nvar enclose = function(circles) {\n  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n};\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$4 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$4.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource$1);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource$1);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource$1);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource$1);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource$1);\n\nvar exponential$1 = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$5 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$5.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$2 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day$$1;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day$$1 = week.getUTCDay();\n          week = day$$1 > 4 || day$$1 === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day$$1 = week.getDay();\n          week = day$$1 > 4 || day$$1 === 0 ? monday.ceil(week) : monday(week);\n          week = day.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day$$1 = d.getDay();\n  return day$$1 === 0 ? 7 : day$$1;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day$$1 = d.getDay();\n  d = (day$$1 >= 4 || day$$1 === 0) ? thursday(d) : thursday.ceil(d);\n  return pad(thursday.count(year(d), d) + (year(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day$$1 = d.getUTCDay();\n  d = (day$$1 >= 4 || day$$1 === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$1 = formatLocale$1(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$3(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar lineRadial$1 = function() {\n  return lineRadial(line().curve(curveRadialLinear));\n};\n\nvar areaRadial = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar pointRadial = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nvar slice$6 = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nfunction defaultWheelDelta() {\n  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable$1() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform$$1, extent, translateExtent) {\n  var dx0 = transform$$1.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform$$1.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform$$1.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform$$1.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform$$1.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable$1,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform$$1) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform$$1);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform$$1, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n  }\n\n  function translate(transform$$1, p0, p1) {\n    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform$$1, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform$$1) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n      this.that.__zoom = transform$$1;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent$1;\nexports.geoClipRectangle = clipRectangle;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.clientPoint = point;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar delimiters = exports.delimiters = function delimiters(svg, scales, dateFormat) {\n    var extremum = svg.select('.extremum');\n    var domain = scales.x.domain();\n\n    extremum.selectAll('.minimum').remove();\n    extremum.selectAll('.maximum').remove();\n\n    extremum.append('text').text(dateFormat(domain[0])).classed('minimum', true);\n\n    extremum.append('text').text(dateFormat(domain[1])).classed('maximum', true).attr('transform', 'translate(' + scales.x.range()[1] + ')').attr('text-anchor', 'end');\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _filterData = __webpack_require__(12);\n\nvar _filterData2 = _interopRequireDefault(_filterData);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (container, scales, config) {\n    return function (data) {\n        var result = [];\n        if (!config.displayLabels) {\n            if (data && !data.length) {\n                return;\n            }\n            data.forEach(function (d) {\n                var count = (0, _filterData2.default)(d.data, scales.x, config.date).length;\n                result.push({ name: d.name, count: count });\n            });\n\n            return result;\n        }\n\n        var labels = void 0;\n        if (data) {\n            labels = container.selectAll('.label').data(data);\n        } else {\n            labels = container.selectAll('.label');\n        }\n\n        var text = function text(d) {\n            var count = (0, _filterData2.default)(d.data, scales.x, config.date).length;\n            result.push({ name: d.name, count: count });\n            return d.name + (count > 0 ? ' (' + count + ')' : '');\n        };\n\n        labels.text(text);\n\n        labels.enter().append('text').classed('label', true).attr('x', config.labelsWidth).attr('transform', function (d, idx) {\n            return 'translate(0, ' + (40 + scales.y(idx)) + ')';\n        }).attr('text-anchor', 'end').text(text);\n\n        labels.exit().remove();\n        return result;\n    };\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.boolOrReturnValue = exports.drawBottomAxis = exports.drawTopAxis = undefined;\n\nvar _xAxis = __webpack_require__(4);\n\nvar _xAxis2 = _interopRequireDefault(_xAxis);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar drawAxis = function drawAxis(container, xScale, configuration, orientation, y) {\n    return container.append('g').classed('x-axis', true).classed(orientation, true).attr('transform', 'translate(0, ' + y + ')').call((0, _xAxis2.default)(xScale, configuration, orientation));\n};\n\nvar drawTopAxis = exports.drawTopAxis = function drawTopAxis(container, xScale, configuration, dimensions) {\n    return drawAxis(container, xScale, configuration, 'top', 0);\n};\n\nvar drawBottomAxis = exports.drawBottomAxis = function drawBottomAxis(container, xScale, configuration, dimensions) {\n    return drawAxis(container, xScale, configuration, 'bottom', +dimensions.height - 21);\n};\n\nvar boolOrReturnValue = exports.boolOrReturnValue = function boolOrReturnValue(x, data) {\n    return typeof x === 'function' ? x(data) : x;\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _d = __webpack_require__(0);\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = function (xScale, configuration, where) {\n    var tickFormat = configuration.locale ? configuration.locale.timeFormat : configuration.tickFormat;\n\n    //change where so the first letter will be uppercase\n    where = '' + where[0].toUpperCase() + where.slice(1);\n\n    var axis = d3['axis' + where]().scale(xScale).tickFormat(tickFormat);\n\n    if (typeof configuration.axisFormat === 'function') {\n        configuration.axisFormat(axis);\n    }\n\n    return axis;\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _d = __webpack_require__(0);\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar config = {\n    lineHeight: 40,\n    start: new Date(0),\n    end: new Date(),\n    minScale: 0,\n    maxScale: Infinity,\n    maxScaleBounds: null, // expects range of dates, the difference between them represents maximal zoom; wins over maxScale\n    dataHorizontalMargin: 10, // an extra space in px, added between left edge of chart and first value, and between last value and right edge \n    overlayDataLines: false, // draw data lines on top of each other forming data layers \n    dropSize: 5,\n    margin: {\n        top: 60,\n        left: 200,\n        bottom: 40,\n        right: 50\n    },\n    displayLabels: true,\n    labelsWidth: 210,\n    labelsRightMargin: 10,\n    locale: null,\n    axisFormat: null,\n    tickFormat: function tickFormat(date) {\n        var formatMillisecond = d3.timeFormat('.%L');\n        var formatSecond = d3.timeFormat(':%S');\n        var formatMinute = d3.timeFormat('%I:%M');\n        var formatHour = d3.timeFormat('%I %p');\n        var formatDay = d3.timeFormat('%a %d');\n        var formatWeek = d3.timeFormat('%b %d');\n        var formatMonth = d3.timeFormat('%B');\n        var formatYear = d3.timeFormat('%Y');\n\n        return (d3.timeSecond(date) < date ? formatMillisecond : d3.timeMinute(date) < date ? formatSecond : d3.timeHour(date) < date ? formatMinute : d3.timeDay(date) < date ? formatHour : d3.timeMonth(date) < date ? d3.timeWeek(date) < date ? formatDay : formatWeek : d3.timeYear(date) < date ? formatMonth : formatYear)(date);\n    },\n    mouseout: function mouseout() {},\n    mouseover: function mouseover() {},\n    zoomend: function zoomend() {},\n    zoomStreamCallback: function zoomStreamCallback() {},\n    click: function click() {},\n    dblclick: function dblclick() {},\n    hasDelimiter: true,\n    date: function date(d) {\n        return d;\n    },\n    hasTopAxis: true,\n    hasBottomAxis: function hasBottomAxis(d) {\n        return d.length >= 10;\n    },\n    eventLineColor: 'black',\n    eventColor: null,\n    metaballs: true,\n    zoomable: true\n};\n\nconfig.dateFormat = config.locale ? config.locale.timeFormat('%d %B %Y') : d3.timeFormat('%d %B %Y');\n\nexports.default = config;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _metaballs = __webpack_require__(14);\n\nvar _delimiters = __webpack_require__(1);\n\nvar _drops = __webpack_require__(10);\n\nvar _drops2 = _interopRequireDefault(_drops);\n\nvar _labels = __webpack_require__(2);\n\nvar _labels2 = _interopRequireDefault(_labels);\n\nvar _lineSeparator = __webpack_require__(11);\n\nvar _lineSeparator2 = _interopRequireDefault(_lineSeparator);\n\nvar _xAxis = __webpack_require__(3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (svg, dimensions, scales, configuration) {\n    var defs = svg.append('defs');\n    var margin = configuration.margin,\n        labelsWidth = configuration.labelsWidth,\n        displayLabels = configuration.displayLabels,\n        lineHeight = configuration.lineHeight;\n\n\n    var chartWidth = dimensions.chartWidth;\n    var chartXOffset = displayLabels ? margin.left + dimensions.labelsTotalWidth : margin.left;\n\n    defs.append('clipPath').attr('id', 'drops-container-clipper').append('rect').attr('id', 'drops-container-rect').attr('width', chartWidth).attr('height', dimensions.height + configuration.margin.top + configuration.margin.bottom);\n\n    var labelsContainer = svg.append('g').classed('labels', true).attr('width', labelsWidth).attr('transform', 'translate(' + margin.left + ', ' + lineHeight + ')');\n\n    var chartWrapper = svg.append('g').attr('class', 'chart-wrapper').attr('width', chartWidth).attr('transform', 'translate(' + chartXOffset + ', ' + configuration.margin.top + ')');\n\n    var dropsContainer = chartWrapper.append('g').classed('drops-container', true).attr('clip-path', 'url(#drops-container-clipper)');\n\n    // NOTE: to correctly blur layers made from data lines blur filter must be applied on every data line separately (see drops.js)\n    if (configuration.metaballs && !configuration.overlayDataLines) {\n        dropsContainer.style('filter', 'url(#metaballs)');\n    }\n\n    chartWrapper.append('g').classed('extremum', true).attr('width', chartWidth).attr('height', 30).attr('transform', 'translate(0, -35)');\n\n    if (configuration.metaballs) {\n        (0, _metaballs.metaballs)(defs);\n    }\n\n    var axesContainer = chartWrapper.append('g').classed('axes', true);\n    var lineSeparator = (0, _lineSeparator2.default)(scales, configuration, dimensions);\n\n    var labels = (0, _labels2.default)(labelsContainer, scales, configuration);\n\n    var drops = (0, _drops2.default)(dropsContainer, scales, configuration);\n\n    return function (data) {\n        lineSeparator(axesContainer, data);\n        if (configuration.hasDelimiter === true) {\n            (0, _delimiters.delimiters)(svg, scales, configuration.dateFormat);\n        }\n        drops(data);\n        labels(data);\n        if ((0, _xAxis.boolOrReturnValue)(configuration.hasTopAxis, data)) {\n            (0, _xAxis.drawTopAxis)(axesContainer, scales.x, configuration, dimensions);\n        }\n        if ((0, _xAxis.boolOrReturnValue)(configuration.hasBottomAxis, data)) {\n            (0, _xAxis.drawBottomAxis)(axesContainer, scales.x, configuration, dimensions);\n        }\n    };\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _d2 = __webpack_require__(0);\n\nvar d3 = _interopRequireWildcard(_d2);\n\nvar _xAxis = __webpack_require__(4);\n\nvar _xAxis2 = _interopRequireDefault(_xAxis);\n\nvar _labels = __webpack_require__(2);\n\nvar _labels2 = _interopRequireDefault(_labels);\n\nvar _delimiters = __webpack_require__(1);\n\nvar _xAxis3 = __webpack_require__(3);\n\nvar _debounce = __webpack_require__(15);\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = function (container, dimensions, scales, configuration, data, callback) {\n    var onZoom = function onZoom(data, index, element) {\n        var scalingFunction = d3.event.transform.rescaleX(scales.x);\n\n        var result = {};\n        if ((0, _xAxis3.boolOrReturnValue)(configuration.hasTopAxis, data)) {\n            container.selectAll('.x-axis.top').call(d3.axisTop().scale(scalingFunction));\n        }\n\n        if ((0, _xAxis3.boolOrReturnValue)(configuration.hasBottomAxis, data)) {\n            container.selectAll('.x-axis.bottom').call(d3.axisBottom().scale(scalingFunction));\n        }\n\n        var sumDataCount = (0, _debounce2.default)(function (data, callback) {\n            var domain = scalingFunction.domain();\n\n            var result = {\n                counts: (0, _labels2.default)(container.select('.labels'), { x: scalingFunction }, configuration)(data),\n                dates: {\n                    from: domain[0],\n                    to: domain[1]\n                }\n            };\n\n            (0, _delimiters.delimiters)(container, { x: scalingFunction }, configuration.dateFormat);\n            if (callback) {\n                callback(result);\n            }\n        }, 100);\n\n        requestAnimationFrame(function () {\n            var drops = container.selectAll('.drop-line').selectAll('.drop').attr('cx', function (d) {\n                return scalingFunction(configuration.date(d));\n            });\n\n            sumDataCount(data, function (result) {\n                if (callback) {\n                    callback(result);\n                }\n            });\n        });\n    };\n\n    var zoomEnd = function zoomEnd(data, index, element) {\n        var scalingFunction = d3.event.transform.rescaleX(scales.x);\n        var domain = scalingFunction.domain();\n        configuration.zoomend({ dates: { from: domain[0], to: domain[1] } });\n    };\n\n    var maxScale = configuration.maxScale;\n    if (Array.isArray(configuration.maxScaleBounds) && configuration.maxScaleBounds.length == 2) {\n        var visualOffset = configuration.dataHorizontalMargin;\n\n        var _configuration$maxSca = _slicedToArray(configuration.maxScaleBounds, 2),\n            d0 = _configuration$maxSca[0],\n            d1 = _configuration$maxSca[1];\n\n        var chartWidth = dimensions.chartWidth;\n        maxScale = (chartWidth - 2 * visualOffset) / Math.abs(scales.x(d1) - scales.x(d0));\n    }\n\n    var zoom = d3.zoom().scaleExtent([configuration.minScale, maxScale]).on('zoom', onZoom).on('end', zoomEnd);\n\n    container.call(zoom);\n    return zoom;\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction configurable(targetFunction, config) {\n\n    function configure(item) {\n        return function(value) {\n            if (!arguments.length) return config[item];\n            config[item] = value;\n\n            return targetFunction;\n        };\n    }\n\n    for (var item in config) {\n        targetFunction[item] = configure(item);\n    }\n}\n\nif(true) {\n    module.exports = configurable;\n} else if ('function' == typeof define && define.amd) {\n    define([], configurable);\n} else {\n    window.configurable = configurable;\n}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _d = __webpack_require__(0);\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = function (container, scales, configuration) {\n    return function (data) {\n        var leftOffset = configuration.labelsWidth + configuration.labelsRightMargin;\n\n        var dropLines = container.selectAll('.drop-line').data(data).enter().append('g').classed('drop-line', true).attr('width', scales.x.range()[1]).attr('transform', function (d, idx) {\n            return 'translate(0, ' + scales.y(idx) + ')';\n        }).attr('fill', configuration.eventLineColor);\n\n        if (configuration.overlayDataLines) {\n            dropLines.attr('transform', function (d, idx) {\n                return 'translate(0,0)';\n            });\n\n            if (configuration.metaballs) {\n                dropLines.style('filter', 'url(#metaballs)');\n            }\n        }\n\n        var drops = dropLines.selectAll('.drop');\n\n        drops.data(function (d) {\n            return d.data;\n        }).enter().append('circle').classed('drop', true).attr('r', configuration.dropSize).attr('cx', function (d) {\n            return scales.x(configuration.date(d));\n        }).attr('cy', configuration.lineHeight / 2).attr('fill', configuration.eventColor).attr(\"data-id\", function (d) {\n            return d.id;\n        }).on('mousedown', configuration.click).on('dblclick', configuration.dblclick).on('mouseover', configuration.mouseover).on('mouseout', configuration.mouseout);\n\n        // unregister previous event handlers to prevent from memory leaks\n        drops.exit().on('mousedown', null).on('dblclick', null).on('mouseout', null).on('mouseover', null).remove();\n\n        dropLines.exit().remove();\n    };\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (scales, configuration, dimensions) {\n    return function (container, data) {\n        var separators = container.selectAll('.line-separator').data(data);\n\n        separators.enter().append('g').classed('line-separator', true).attr('transform', function (d, i) {\n            return 'translate(0, ' + (scales.y(i) + configuration.lineHeight) + ')';\n        }).append('line').attr('x1', 0).attr('x2', dimensions.width - (configuration.displayLabels ? configuration.labelsWidth + configuration.labelsRightMargin : 0));\n\n        separators.exit().remove();\n    };\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = filterData;\nfunction filterData() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var scale = arguments[1];\n    var date = arguments[2];\n\n    var _scale$domain = scale.domain(),\n        _scale$domain2 = _slicedToArray(_scale$domain, 2),\n        min = _scale$domain2[0],\n        max = _scale$domain2[1];\n\n    return data.filter(function (d) {\n        return date(d) >= min && date(d) <= max;\n    });\n}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.eventDrops = undefined;\n\nvar _d = __webpack_require__(0);\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _configurable = __webpack_require__(8);\n\nvar _configurable2 = _interopRequireDefault(_configurable);\n\n__webpack_require__(9);\n\nvar _config = __webpack_require__(5);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _drawer = __webpack_require__(6);\n\nvar _drawer2 = _interopRequireDefault(_drawer);\n\nvar _zoom = __webpack_require__(7);\n\nvar _zoom2 = _interopRequireDefault(_zoom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction eventDrops() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var finalConfiguration = Object.assign({}, _config2.default, config);\n\n    var yScale = function yScale(data) {\n        return d3.scaleOrdinal().domain(data.map(function (d) {\n            return d.name;\n        })).range(data.map(function (d, i) {\n            return i * finalConfiguration.lineHeight;\n        }));\n    };\n\n    var xScale = function xScale(width, timeBounds) {\n        return d3.scaleTime().domain(timeBounds).range([0, width]);\n    };\n\n    function eventDropGraph(selection) {\n        var scales = void 0;\n        var chart = selection.each(function selector(data) {\n            d3.select(this).select('.event-drops-chart').remove();\n\n            var dimensions = {\n                width: this.clientWidth,\n                height: finalConfiguration.overlayDataLines ? finalConfiguration.lineHeight : data.length * finalConfiguration.lineHeight,\n\n                labelsTotalWidth: finalConfiguration.labelsWidth + finalConfiguration.labelsRightMargin,\n\n                get chartWidth() {\n                    var widthWithoutMargins = this.width - finalConfiguration.margin.left - finalConfiguration.margin.right;\n                    var chartWidth = finalConfiguration.displayLabels ? widthWithoutMargins - this.labelsTotalWidth : widthWithoutMargins;\n\n                    return chartWidth;\n                }\n            };\n\n            var svg = d3.select(this).append('svg').classed('event-drops-chart', true).attr('width', dimensions.width).attr('height', dimensions.height + finalConfiguration.margin.top + finalConfiguration.margin.bottom);\n\n            scales = getScales(dimensions, finalConfiguration, data);\n\n            var draw = (0, _drawer2.default)(svg, dimensions, scales, finalConfiguration);\n            draw(data);\n\n            if (finalConfiguration.zoomable) {\n                (0, _zoom2.default)(svg, dimensions, scales, finalConfiguration, data, finalConfiguration.zoomStreamCallback);\n            }\n        });\n\n        chart.dateFormat = finalConfiguration.dateFormat;\n        chart.scales = scales;\n    }\n\n    function getScales(dimensions, configuration, data) {\n        var visualOffset = configuration.dataHorizontalMargin;\n        var tmpXScale = d3.scaleTime().domain([configuration.start, configuration.end]).range([visualOffset, dimensions.chartWidth - visualOffset]);\n        var timeBoundsWithOffset = [tmpXScale.invert(0), tmpXScale.invert(dimensions.chartWidth)];\n        return {\n            x: xScale(dimensions.chartWidth, timeBoundsWithOffset),\n            y: yScale(data)\n        };\n    }\n\n    (0, _configurable2.default)(eventDropGraph, finalConfiguration);\n\n    return eventDropGraph;\n}\n\nd3.chart = d3.chart || {};\nd3.chart.eventDrops = eventDrops;\n\nexports.eventDrops = eventDrops;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar metaballs = exports.metaballs = function metaballs(defs) {\n    var filters = defs.append('filter');\n\n    filters.attr('id', 'metaballs');\n\n    filters.append('feGaussianBlur').attr('in', 'SourceGraphic').attr('stdDeviation', 10).attr('result', 'blur');\n\n    filters.append('feColorMatrix').attr('in', 'blur').attr('mode', 'matrix').attr('values', '1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 50 -10').attr('result', 'contrast');\n\n    filters.append('feBlend').attr('in', 'SourceGraphic').attr('in2', 'contrast');\n\n    return filters;\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// eventDrops.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fe5e40a429f8cbcc5d3b","// https://d3js.org Version 4.12.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.12.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number$1(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = get$1(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = get$1(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n    schedule$$1.state = ENDED;\n    schedule$$1.timer.stop();\n    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule$$1 = set$1(this, id);\n    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition$$1) {\n  if (transition$$1._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule$$1 = sit(this, id),\n        on = schedule$$1.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar EOL = {};\nvar EOF = {};\nvar QUOTE = 34;\nvar NEWLINE = 10;\nvar RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return next ? previous.next = next : delete previous.next, this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar radial = function(radius, x, y) {\n  var nodes,\n      strength = constant$6(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant$6(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipRejoin = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius) {\n  var cr = cos$1(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream$1));\n  fitBounds(boundsStream$1.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nfunction fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nfunction fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null, (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity$4,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n};\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon$2 && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nvar naturalEarth1 = function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice$3 = Array.prototype.slice;\n\nfunction shuffle$1(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nvar enclose = function(circles) {\n  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n};\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$4 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$4.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource$1);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource$1);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource$1);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource$1);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource$1);\n\nvar exponential$1 = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$5 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$5.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$2 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day$$1;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day$$1 = week.getUTCDay();\n          week = day$$1 > 4 || day$$1 === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day$$1 = week.getDay();\n          week = day$$1 > 4 || day$$1 === 0 ? monday.ceil(week) : monday(week);\n          week = day.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day$$1 = d.getDay();\n  return day$$1 === 0 ? 7 : day$$1;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day$$1 = d.getDay();\n  d = (day$$1 >= 4 || day$$1 === 0) ? thursday(d) : thursday.ceil(d);\n  return pad(thursday.count(year(d), d) + (year(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day$$1 = d.getUTCDay();\n  d = (day$$1 >= 4 || day$$1 === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$1 = formatLocale$1(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$3(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar lineRadial$1 = function() {\n  return lineRadial(line().curve(curveRadialLinear));\n};\n\nvar areaRadial = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar pointRadial = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nvar slice$6 = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nfunction defaultWheelDelta() {\n  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable$1() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform$$1, extent, translateExtent) {\n  var dx0 = transform$$1.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform$$1.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform$$1.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform$$1.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform$$1.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable$1,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform$$1) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform$$1);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform$$1, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n  }\n\n  function translate(transform$$1, p0, p1) {\n    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform$$1, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform$$1) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n      this.that.__zoom = transform$$1;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent$1;\nexports.geoClipRectangle = clipRectangle;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.clientPoint = point;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 0\n// module chunks = 0","export const delimiters = (svg, scales, dateFormat) => {\n    const extremum = svg.select('.extremum');\n    const domain = scales.x.domain();\n\n    extremum.selectAll('.minimum').remove();\n    extremum.selectAll('.maximum').remove();\n\n    extremum\n        .append('text')\n        .text(dateFormat(domain[0]))\n        .classed('minimum', true);\n\n    extremum\n        .append('text')\n        .text(dateFormat(domain[1]))\n        .classed('maximum', true)\n        .attr('transform', `translate(${scales.x.range()[1]})`)\n        .attr('text-anchor', 'end');\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer/delimiters.js","import filterData from '../filterData';\n\nexport default (container, scales, config) =>\n    data => {\n        const result = [];\n        if(!config.displayLabels) {\n            if(data && !data.length){\n                return;\n            }\n            data.forEach( d => {\n                const count = filterData(d.data, scales.x, config.date).length;\n                result.push({name: d.name,count: count});    \n            })\n            \n            return result;\n        }\n\n        let labels;\n        if(data){\n            labels = container.selectAll('.label').data(data);\n        }\n        else {\n            labels = container.selectAll('.label');   \n        }\n\n        const text = d => {\n            const count = filterData(d.data, scales.x, config.date).length;\n            result.push({name: d.name,count: count});\n            return d.name + (count > 0 ? ` (${count})` : '');\n        };\n\n        labels.text(text);\n\n        labels\n            .enter()\n            .append('text')\n            .classed('label', true)\n            .attr('x', config.labelsWidth)\n            .attr(\n                'transform',\n                (d, idx) => `translate(0, ${40 + scales.y(idx)})`\n            )\n            .attr('text-anchor', 'end')\n            .text(text);\n\n        labels.exit().remove();\n        return result;\n    };\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer/labels.js","import xAxis from '../xAxis';\n\nconst drawAxis = (container, xScale, configuration, orientation, y) => {\n    return container\n        .append('g')\n        .classed('x-axis', true)\n        .classed(orientation, true)\n        .attr('transform', `translate(0, ${y})`)\n        .call(xAxis(xScale, configuration, orientation));\n};\n\nexport const drawTopAxis = (container, xScale, configuration, dimensions) =>\n    drawAxis(container, xScale, configuration, 'top', 0);\n\nexport const drawBottomAxis = (container, xScale, configuration, dimensions) =>\n    drawAxis(\n        container,\n        xScale,\n        configuration,\n        'bottom',\n        +dimensions.height - 21\n    );\n\nexport const boolOrReturnValue = (x, data) =>\n    typeof x === 'function' ? x(data) : x;\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer/xAxis.js","import * as d3 from 'd3/build/d3';\n\nexport default (xScale, configuration, where) => {\n    const tickFormat = configuration.locale\n        ? configuration.locale.timeFormat\n        : configuration.tickFormat;\n\n    //change where so the first letter will be uppercase\n    where = `${where[0].toUpperCase()}${where.slice(1)}`;\n\n    const axis = d3[`axis${where}`]().scale(xScale).tickFormat(tickFormat);\n\n    if (typeof configuration.axisFormat === 'function') {\n        configuration.axisFormat(axis);\n    }\n\n    return axis;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/xAxis.js","import * as d3 from 'd3/build/d3';\n\nconst config = {\n    lineHeight: 40,\n    start: new Date(0),\n    end: new Date(),\n    minScale: 0,\n    maxScale: Infinity,\n    maxScaleBounds: null, // expects range of dates, the difference between them represents maximal zoom; wins over maxScale\n    dataHorizontalMargin: 10, // an extra space in px, added between left edge of chart and first value, and between last value and right edge \n    overlayDataLines: false, // draw data lines on top of each other forming data layers \n    dropSize: 5, \n    margin: {\n        top: 60,\n        left: 200,\n        bottom: 40,\n        right: 50,\n    },\n    displayLabels: true,\n    labelsWidth: 210,\n    labelsRightMargin: 10,\n    locale: null,\n    axisFormat: null,\n    tickFormat: date => {\n        const formatMillisecond = d3.timeFormat('.%L');\n        const formatSecond = d3.timeFormat(':%S');\n        const formatMinute = d3.timeFormat('%I:%M');\n        const formatHour = d3.timeFormat('%I %p');\n        const formatDay = d3.timeFormat('%a %d');\n        const formatWeek = d3.timeFormat('%b %d');\n        const formatMonth = d3.timeFormat('%B');\n        const formatYear = d3.timeFormat('%Y');\n\n        return (d3.timeSecond(date) < date\n            ? formatMillisecond\n            : d3.timeMinute(date) < date\n                  ? formatSecond\n                  : d3.timeHour(date) < date\n                        ? formatMinute\n                        : d3.timeDay(date) < date\n                              ? formatHour\n                              : d3.timeMonth(date) < date\n                                    ? d3.timeWeek(date) < date\n                                          ? formatDay\n                                          : formatWeek\n                                    : d3.timeYear(date) < date\n                                          ? formatMonth\n                                          : formatYear)(date);\n    },\n    mouseout: () => {},\n    mouseover: () => {},\n    zoomend: () => {},\n    zoomStreamCallback: () => {},\n    click: () => {},\n    dblclick: () => {},\n    hasDelimiter: true,\n    date: d => d,\n    hasTopAxis: true,\n    hasBottomAxis: d => d.length >= 10,\n    eventLineColor: 'black',\n    eventColor: null,\n    metaballs: true,\n    zoomable: true,\n};\n\nconfig.dateFormat = config.locale\n    ? config.locale.timeFormat('%d %B %Y')\n    : d3.timeFormat('%d %B %Y');\n\nexport default config;\n\n\n\n// WEBPACK FOOTER //\n// ./src/config.js","import { metaballs } from '../metaballs';\nimport { delimiters } from './delimiters';\nimport dropsFactory from './drops';\nimport labelsFactory from './labels';\nimport lineSeparatorFactory from './lineSeparator';\nimport { drawTopAxis, drawBottomAxis, boolOrReturnValue } from './xAxis';\n\nexport default (svg, dimensions, scales, configuration) => {\n    const defs = svg.append('defs');\n    const { margin, labelsWidth, displayLabels, lineHeight} = configuration;\n\n    const chartWidth = dimensions.chartWidth;\n    const chartXOffset = displayLabels ? margin.left + dimensions.labelsTotalWidth : margin.left;\n\n    defs\n        .append('clipPath')\n        .attr('id', 'drops-container-clipper')\n        .append('rect')\n        .attr('id', 'drops-container-rect')\n        .attr('width', chartWidth)\n        .attr(\n            'height',\n            dimensions.height +\n                configuration.margin.top +\n                configuration.margin.bottom\n        );\n\n    \n    const labelsContainer = svg\n        .append('g')\n        .classed('labels', true)\n        .attr('width', labelsWidth)\n        .attr('transform', `translate(${margin.left}, ${lineHeight})`);\n    \n    const chartWrapper = svg\n        .append('g')\n        .attr('class', 'chart-wrapper')\n        .attr('width', chartWidth)\n        .attr('transform', `translate(${chartXOffset}, ${configuration.margin.top})` );\n\n    const dropsContainer = chartWrapper\n        .append('g')\n        .classed('drops-container', true)\n        .attr('clip-path', 'url(#drops-container-clipper)');\n\n    // NOTE: to correctly blur layers made from data lines blur filter must be applied on every data line separately (see drops.js)\n    if (configuration.metaballs && !configuration.overlayDataLines) {\n        dropsContainer.style('filter', 'url(#metaballs)');\n    }\n\n    chartWrapper\n        .append('g')\n        .classed('extremum', true)\n        .attr('width', chartWidth)\n        .attr('height', 30)\n        .attr('transform', `translate(0, -35)`);\n\n    if (configuration.metaballs) {\n        metaballs(defs);\n    }\n\n    const axesContainer = chartWrapper.append('g').classed('axes', true);\n    const lineSeparator = lineSeparatorFactory(\n        scales,\n        configuration,\n        dimensions\n    );\n    \n    const labels = labelsFactory(labelsContainer, scales, configuration);\n    \n    const drops = dropsFactory(dropsContainer, scales, configuration);\n\n    return data => {\n        lineSeparator(axesContainer, data);\n        if(configuration.hasDelimiter === true){\n            delimiters(\n                svg,\n                scales,\n                configuration.dateFormat\n            );\n        }\n        drops(data);\n        labels(data);\n        if (boolOrReturnValue(configuration.hasTopAxis, data)) {\n            drawTopAxis(axesContainer, scales.x, configuration, dimensions);\n        }\n        if (boolOrReturnValue(configuration.hasBottomAxis, data)) {\n            drawBottomAxis(axesContainer, scales.x, configuration, dimensions);\n        }\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer/index.js","import * as d3 from 'd3/build/d3';\nimport xAxis from './xAxis';\nimport labels from './drawer/labels';\nimport { delimiters } from './drawer/delimiters';\nimport { boolOrReturnValue } from './drawer/xAxis';\nimport debounce from 'debounce';\n\nexport default (\n    container,\n    dimensions,\n    scales,\n    configuration,\n    data,\n    callback\n) => {\n    const onZoom = (data, index, element) => {\n        const scalingFunction = d3.event.transform.rescaleX(scales.x);\n\n        let result = {};\n        if (boolOrReturnValue(configuration.hasTopAxis, data)) {\n            container\n                .selectAll('.x-axis.top')\n                .call(d3.axisTop().scale(scalingFunction));\n        }\n\n        if (boolOrReturnValue(configuration.hasBottomAxis, data)) {\n            container\n                .selectAll('.x-axis.bottom')\n                .call(d3.axisBottom().scale(scalingFunction));\n        }\n\n        const sumDataCount = debounce(\n            (data, callback) => {\n                const domain = scalingFunction.domain();\n\n                const result = {\n                    counts: labels(\n                        container.select('.labels'),\n                        { x: scalingFunction },\n                        configuration\n                    )(data),\n                    dates: {\n                        from: domain[0],\n                        to: domain[1]\n                    }\n                };\n\n                delimiters(\n                    container,\n                    { x: scalingFunction },\n                    configuration.dateFormat\n                );\n                if (callback) {\n                    callback(result);\n                }\n            },\n            100\n        );\n\n        requestAnimationFrame(() => {\n            const drops = container\n                .selectAll('.drop-line')\n                .selectAll('.drop')\n                .attr('cx', d => scalingFunction(configuration.date(d)));\n\n            sumDataCount(data, result => {\n                if (callback) {\n                    callback(result);\n                }\n            });\n        });\n    };\n\n    const zoomEnd = (data, index, element) => {\n        const scalingFunction = d3.event.transform.rescaleX(scales.x);\n        const domain = scalingFunction.domain();\n        configuration.zoomend({dates: {from: domain[0], to: domain[1]}});\n    };\n\n\n    let maxScale = configuration.maxScale\n    if (Array.isArray(configuration.maxScaleBounds) && configuration.maxScaleBounds.length==2){\n        const visualOffset = configuration.dataHorizontalMargin;\n        const [d0, d1] = configuration.maxScaleBounds;\n        const chartWidth = dimensions.chartWidth;\n        maxScale = (chartWidth - 2*visualOffset) / Math.abs( scales.x(d1) - scales.x(d0))\n    }\n\n    const zoom = d3\n        .zoom()\n        .scaleExtent([configuration.minScale, maxScale])\n        .on('zoom', onZoom)\n        .on('end', zoomEnd);\n\n    container.call(zoom);\n    return zoom;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/zoom.js","'use strict';\n\nfunction configurable(targetFunction, config) {\n\n    function configure(item) {\n        return function(value) {\n            if (!arguments.length) return config[item];\n            config[item] = value;\n\n            return targetFunction;\n        };\n    }\n\n    for (var item in config) {\n        targetFunction[item] = configure(item);\n    }\n}\n\nif('object' == typeof exports && 'undefined' != typeof module) {\n    module.exports = configurable;\n} else if ('function' == typeof define && define.amd) {\n    define([], configurable);\n} else {\n    window.configurable = configurable;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/configurable.js/configurable.js\n// module id = 8\n// module chunks = 0","import * as d3 from 'd3/build/d3';\n\nexport default (container, scales, configuration) =>\n    data => {\n        const leftOffset = configuration.labelsWidth +\n            configuration.labelsRightMargin;\n\n        const dropLines = container\n            .selectAll('.drop-line')\n            .data(data)\n            .enter()\n            .append('g')\n            .classed('drop-line', true)\n            .attr('width', scales.x.range()[1])\n            .attr('transform', (d, idx) => `translate(0, ${scales.y(idx)})`)\n            .attr('fill', configuration.eventLineColor)\n            \n\n        if (configuration.overlayDataLines ){\n            dropLines.attr('transform', (d,idx)=>'translate(0,0)')\n            \n            if (configuration.metaballs) {\n                dropLines.style('filter', 'url(#metaballs)')\n            }\n        }   \n\n        const drops = dropLines.selectAll('.drop');\n\n        drops\n            .data(d => d.data)\n            .enter()\n            .append('circle')\n            .classed('drop', true)\n            .attr('r', configuration.dropSize)\n            .attr('cx', d => scales.x(configuration.date(d)))\n            .attr('cy', configuration.lineHeight / 2)\n            .attr('fill', configuration.eventColor)\n            .attr(\"data-id\", d => d.id)\n            .on('mousedown', configuration.click)\n            .on('dblclick',configuration.dblclick)\n            .on('mouseover', configuration.mouseover)\n            .on('mouseout', configuration.mouseout);\n\n        // unregister previous event handlers to prevent from memory leaks\n        drops\n            .exit()\n            .on('mousedown', null)\n            .on('dblclick',null)\n            .on('mouseout', null)\n            .on('mouseover', null)\n            .remove();\n\n        dropLines.exit().remove();\n    };\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer/drops.js","export default (scales, configuration, dimensions) =>\n    (container, data) => {\n        const separators = container.selectAll('.line-separator').data(data);\n\n        separators\n            .enter()\n            .append('g')\n            .classed('line-separator', true)\n            .attr(\n                'transform',\n                (d, i) =>\n                    `translate(0, ${scales.y(i) + configuration.lineHeight})`\n            )\n            .append('line')\n            .attr('x1', 0)\n            .attr(\n                'x2',\n                dimensions.width -\n                    (configuration.displayLabels ? configuration.labelsWidth +\n                        configuration.labelsRightMargin : 0)\n            );\n\n        separators.exit().remove();\n    };\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer/lineSeparator.js","export default function filterData(data = [], scale, date) {\n    const [min, max] = scale.domain();\n    return data.filter(d => date(d) >= min && date(d) <= max);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/filterData.js","import * as d3 from 'd3/build/d3';\nimport configurable from 'configurable.js';\n\nimport './style.css';\n\nimport defaultConfig from './config';\nimport drawer from './drawer';\nimport zoom from './zoom';\n\nfunction eventDrops(config = {}) {\n    const finalConfiguration = Object.assign({}, defaultConfig, config);\n\n    const yScale = data => {\n        return d3\n            .scaleOrdinal()\n            .domain(data.map(d => d.name))\n            .range(data.map((d, i) => i * finalConfiguration.lineHeight));\n    };\n\n    const xScale = (width, timeBounds) => {\n        return d3.scaleTime().domain(timeBounds).range([0, width]);\n    };\n\n    function eventDropGraph(selection) {\n        let scales;\n        const chart = selection.each(function selector(data) {\n            d3.select(this).select('.event-drops-chart').remove();\n\n            const dimensions = {\n                width: this.clientWidth,\n                height: finalConfiguration.overlayDataLines ? finalConfiguration.lineHeight : data.length * finalConfiguration.lineHeight,\n\n                labelsTotalWidth: finalConfiguration.labelsWidth + finalConfiguration.labelsRightMargin,\n\n                get chartWidth () {\n                    const widthWithoutMargins = this.width - finalConfiguration.margin.left - finalConfiguration.margin.right;\n                    const chartWidth = finalConfiguration.displayLabels ? widthWithoutMargins - this.labelsTotalWidth : widthWithoutMargins\n\n                    return chartWidth;\n                }\n            };\n\n            const svg = d3\n                .select(this)\n                .append('svg')\n                .classed('event-drops-chart', true)\n                .attr(\n                    'width',\n                    dimensions.width \n                )\n                .attr(\n                    'height',\n                    dimensions.height +\n                        finalConfiguration.margin.top +\n                        finalConfiguration.margin.bottom\n                );\n\n            scales = getScales(dimensions, finalConfiguration, data);\n\n            const draw = drawer(svg, dimensions, scales, finalConfiguration);\n            draw(data);\n\n            if (finalConfiguration.zoomable) {\n                zoom(\n                    svg,\n                    dimensions,\n                    scales,\n                    finalConfiguration,\n                    data,\n                    finalConfiguration.zoomStreamCallback\n                );\n            }\n        });\n\n        chart.dateFormat = finalConfiguration.dateFormat;\n        chart.scales = scales;\n    }\n\n    function getScales(dimensions, configuration, data) {\n        const visualOffset = configuration.dataHorizontalMargin;\n        const tmpXScale = d3.scaleTime().domain([configuration.start, configuration.end]).range([visualOffset, dimensions.chartWidth-visualOffset]);\n        const timeBoundsWithOffset = [tmpXScale.invert(0), tmpXScale.invert(dimensions.chartWidth)]\n        return {\n            x: xScale(\n                dimensions.chartWidth,\n                timeBoundsWithOffset\n            ),\n            y: yScale(data),\n        };\n    }\n\n    configurable(eventDropGraph, finalConfiguration);\n\n    return eventDropGraph;\n}\n\nd3.chart = d3.chart || {};\nd3.chart.eventDrops = eventDrops;\n\nexport { eventDrops };\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","export const metaballs = defs => {\n    const filters = defs.append('filter');\n\n    filters.attr('id', 'metaballs');\n\n    filters\n        .append('feGaussianBlur')\n        .attr('in', 'SourceGraphic')\n        .attr('stdDeviation', 10)\n        .attr('result', 'blur');\n\n    filters\n        .append('feColorMatrix')\n        .attr('in', 'blur')\n        .attr('mode', 'matrix')\n        .attr('values', '1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 50 -10')\n        .attr('result', 'contrast');\n\n    filters\n        .append('feBlend')\n        .attr('in', 'SourceGraphic')\n        .attr('in2', 'contrast');\n\n    return filters;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/metaballs.js","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debounce/index.js\n// module id = 15\n// module chunks = 0"],"sourceRoot":""}